<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">
		
	<context:annotation-config/>

	<security:http pattern="/_ui/**" security="none" />

	<!-- Ignores url(s) that match paths specified in the set -->
	<bean id="excludeUrlRequestMatcher" class="com.amway.apac.auth.security.ExcludeUrlRequestMatcher">
		<property name="excludeUrlSet" ref="excludeUrlSet"/>
		<property name="pathMatcher" ref="defaultPathMatcher"/>
	</bean>

	<!-- The set of url(s) to exclude from the 'Default security config'-->
	<bean id="excludeUrlSet" class="java.util.HashSet" />

	<!-- Path matcher to use, AntPathMatcher is the default -->
	<alias name="antPathMatcher" alias="defaultPathMatcher" />
	<bean id="antPathMatcher" class="org.springframework.util.AntPathMatcher" />

	<!-- Default security config -->
	<security:http request-matcher-ref="excludeUrlRequestMatcher">
		<security:anonymous username="anonymous" granted-authority="ROLE_ANONYMOUS" />
		<security:access-denied-handler error-page="/login"/>
		<security:session-management session-authentication-strategy-ref="fixation" />
		<security:csrf token-repository-ref="csrfTokenRepository" request-matcher-ref="csrfProtectionMatcher" />
		<security:custom-filter before="CSRF_FILTER" ref="logoutFilter" />

		<!-- RememberMe -->
		<security:remember-me key="amwayapacauth" services-ref="rememberMeServices" />

		<!-- SSL / AUTHENTICATED pages -->
		<security:intercept-url pattern="/my-account/addressform" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_CUSTOMERGROUP')" requires-channel="https" />
		<security:intercept-url pattern="/checkout/multi/billingaddressform" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_CUSTOMERGROUP')" requires-channel="https" />
		<security:intercept-url pattern="/my-account*" access="hasRole('ROLE_CUSTOMERGROUP')" requires-channel="https" />
		<security:intercept-url pattern="/my-account/order/*/getReadOnlyProductVariantMatrix" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_CUSTOMERGROUP')" requires-channel="https" />
		<security:intercept-url pattern="/my-account/**" access="hasRole('ROLE_CUSTOMERGROUP')" requires-channel="https" />
		<security:intercept-url pattern="/quote/**" access="hasRole('ROLE_CUSTOMERGROUP')" requires-channel="https" />

		<security:intercept-url pattern="/**" requires-channel="https" /> <!-- Everything should be secure -->

		<security:form-login
				login-page="/login"
				authentication-failure-handler-ref="loginAuthenticationFailureHandler"
				authentication-success-handler-ref="loginGuidAuthenticationSuccessHandler"
				username-parameter="j_username" 
				password-parameter="j_password" 
				login-processing-url="/j_spring_security_check"
				  />

		<security:port-mappings>
			<security:port-mapping http="#{configurationService.configuration.getProperty('tomcat.http.port')}"
			                       https="#{configurationService.configuration.getProperty('tomcat.ssl.port')}" />
			<security:port-mapping http="80" https="443" />
			<!--security:port-mapping http="#{configurationService.configuration.getProperty('proxy.http.port')}"
				https="#{configurationService.configuration.getProperty('proxy.ssl.port')}" /-->
		</security:port-mappings>

		<security:request-cache ref="httpSessionRequestCache" />
		
		<security:headers>
			<security:frame-options disabled="true"/>
		</security:headers>

	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="amwayAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="amwayAuthenticationProvider" parent="acceleratorAuthenticationProvider" 
			class="com.amway.apac.auth.security.impl.AmwayAuthenticationProvider">
			<property name="lynxUserService" ref="lynxUserService" />
			<property name="lynxAccountService" ref="lynxAccountService" />
			<property name="lynxExternalAuthenticationService" ref="lynxExternalAuthenticationService"/>
			<property name="sessionService" ref="sessionService" />
	</bean>

	<bean id="acceleratorAuthenticationProvider" parent="abstractAcceleratorAuthenticationProvider" 
			class="com.amway.apac.auth.security.AcceleratorAuthenticationProvider">
		<property name="adminGroup" value="ROLE_ADMINGROUP"/>
	</bean>

	<bean id="coreUserDetailsService" class="de.hybris.platform.spring.security.CoreUserDetailsService"  />

	<bean id="guidCookieStrategy" class="com.amway.apac.auth.security.impl.DefaultGUIDCookieStrategy"
	      >
		<property name="cookieGenerator" ref="guidCookieGenerator" />
	</bean>
	

	<alias name="defaultGuidCookieGenerator" alias="guidCookieGenerator"/>
	<bean id="defaultGuidCookieGenerator" class="com.amway.apac.auth.security.cookie.EnhancedCookieGenerator" >
		<property name="cookieSecure" value="true" />
		<property name="cookieName" value="acceleratorSecureGUID" />
		<property name="httpOnly" value="true"/>
	</bean>

	<bean id="autoLoginStrategy" class="com.amway.apac.auth.security.impl.DefaultAutoLoginStrategy" >
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="customerFacade" ref="customerFacade" />
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<property name="rememberMeServices" ref="rememberMeServices"/>
	</bean>

	<bean id="httpSessionRequestCache" class="com.amway.apac.auth.security.impl.WebHttpSessionRequestCache">
        <property name="requestMatcher" ref="excludeRedirectUrlRequestMatcher" />
		<property name="sessionService" ref="sessionService"/>
	</bean>

	<!-- Ignores url(s) that match paths specified in the set -->
	<bean id="excludeRedirectUrlRequestMatcher" class="com.amway.apac.auth.security.ExcludeUrlRequestMatcher">
	<property name="excludeUrlSet">
		<set>
			<value>/guest/*</value>
			<value>/orderConfirmation/*</value>
			<value>/login</value>
			<value>/login/checkout</value>
		</set>
	</property>
	<property name="pathMatcher" ref="defaultPathMatcher" />
	</bean>

	<bean id="redirectStrategy" class="org.springframework.security.web.DefaultRedirectStrategy"  />

	<!-- Login Success Handlers -->

	<bean id="loginGuidAuthenticationSuccessHandler" class="com.amway.apac.auth.security.GUIDAuthenticationSuccessHandler" >
		<property name="authenticationSuccessHandler" ref="loginAuthenticationSuccessHandler" />
		<property name="guidCookieStrategy" ref="guidCookieStrategy" />
	</bean>

	<bean id="loginAuthenticationSuccessHandler" class="com.amway.apac.auth.handler.AmwayStorefrontAuthenticationSuccessHandler" >
		<property name="uiExperienceService" ref="uiExperienceService"/>
        <property name="clientDetailsService" ref="oauthClientDetails"/>
        <property name="jwtTokenProvider" ref="jWTokenProvider"/>
	</bean>


	<alias name="defaultCommerceRedirectStrategy" alias="commerceRedirectStrategy"/>
	<bean name="defaultCommerceRedirectStrategy" class="com.amway.apac.auth.security.impl.DefaultCommerceRedirectStrategy" parent="redirectStrategy">
		<property name="checkoutFlowFacade" ref="checkoutFlowFacade"/>
		<property name="expressTargetUrl" value="/checkout/multi/express"/>
   </bean>

	<bean id="loginAuthenticationFailureHandler" class="com.amway.apac.auth.security.LoginAuthenticationFailureHandler" >
        <property name="bruteForceAttackCounter" ref="bruteForceAttackCounter" />
		<property name="defaultFailureUrl" value="/login?error=true"/>
	</bean>

	<!-- Logout Success Handler -->

	<util:list id="logoutRestrictedPages" value-type="java.lang.String">
		<value>/my-account</value>
		<value>/checkout</value>
		<value>/quote</value>
	</util:list>

	<bean id="logoutSuccessHandler" class="de.hybris.platform.acceleratorstorefrontcommons.security.StorefrontLogoutSuccessHandler" >
		<property name="defaultTargetUrl" value="/?logout=true"/>
		<property name="guidCookieStrategy" ref="guidCookieStrategy"/>
		<property name="useReferer" value="true"/>
		<property name="restrictedPages" ref="logoutRestrictedPages"/>
	</bean>
	
     <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
 		<constructor-arg name="logoutSuccessHandler" ref="logoutSuccessHandler" />
 		<constructor-arg name="handlers">
 			<list>
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
 				<ref bean="rememberMeServices" />
 			</list>
 		</constructor-arg>
 	</bean>

	<!-- Remember Me -->

	<bean id="rememberMeProcessingFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter" >
		<constructor-arg name="rememberMeServices" ref="rememberMeServices"/>
		<constructor-arg name="authenticationManager" ref="authenticationManager"/>
	</bean>

	
	<alias name="defaultRememberMeServices" alias="rememberMeServices"/>
	<bean id="defaultRememberMeServices" class="com.amway.apac.auth.security.AcceleratorRememberMeServices" >
		<constructor-arg name="key" value="amwayapacauth" />
		<constructor-arg name="userDetailsService" ref="originalUidUserDetailsService" />
		<property name="cookieName" value="amwayapacauthRememberMe" />
		<property name="alwaysRemember" value="false" />
		<property name="userService" ref="userService"/>
		<property name="useSecureCookie" value="true"/>
		<property name="customerFacade" ref="customerFacade"/>
		<property name="checkoutCustomerStrategy" ref="checkoutCustomerStrategy"/>
		<property name="urlEncoderService" ref="urlEncoderService"/>
		<property name="storeSessionFacade" ref="storeSessionFacade"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="secureTokenService" ref="secureTokenService"/>
	</bean>

	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider" >
		<constructor-arg name="key" value="amwayapacauth"/>
	</bean>
	
	<!-- CSRF -->
	<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
    	<property name="headerName" value="CSRFToken" />
    	<property name="parameterName" value="CSRFToken" />
	</bean>
	
	<util:list id="csrfAllowedUrlPatternsList" />
	
	<alias name="defaultCsrfProtectionMatcher" alias="csrfProtectionMatcher"/>
	<bean id="defaultCsrfProtectionMatcher" class="com.amway.apac.auth.security.CsrfProtectionMatcher">
		<property name="csrfAllowedUrlPatterns" ref="csrfAllowedUrlPatternsList"/>
	</bean>
    
    <alias name="amwayJWTokenProvider" alias="jWTokenProvider"/>
    <bean id="amwayJWTokenProvider" class="com.amway.apac.auth.security.impl.AmwayJWTTokenProviderImpl">
        <property name="lynxCustomerFacade" ref="customerFacade" />
        <property name="customerNameStrategy" ref="customerNameStrategy"/>
    </bean>

</beans>